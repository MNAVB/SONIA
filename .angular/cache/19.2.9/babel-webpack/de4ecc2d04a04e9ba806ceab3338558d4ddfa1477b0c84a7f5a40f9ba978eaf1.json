{"ast":null,"code":"import _asyncToGenerator from \"D:/Usuarios/huama/WebstormProjects/SONIA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { provideFirebaseApp, initializeApp } from '@angular/fire/app';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { AppComponent } from './app/app.component';\nimport { environment } from './environments/environment';\nimport { collection, getDocs } from 'firebase/firestore';\nbootstrapApplication(AppComponent, {\n  providers: [provideFirebaseApp(() => {\n    console.log('Inicializando Firebase...');\n    return initializeApp(environment.firebase);\n  }), provideFirestore(() => getFirestore())]\n}).catch(err => console.error(err));\n// Prueba de Firestore\nconst testFirestoreConnection = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (db) {\n    try {\n      console.log('Probando conexión a Firestore...');\n      const querySnapshot = yield getDocs(collection(db, 'ProductosCollection')); // Cambia 'ProductosCollection' por tu colección\n      const data = querySnapshot.docs.map(doc => doc.data());\n      document.body.innerHTML += `<p>Firestore conectado: ${JSON.stringify(data)}</p>`;\n    } catch (error) {\n      console.error('Error conectando a Firestore:', error);\n      document.body.innerHTML += `<p>Error conectando a Firestore: ${error.message}</p>`;\n    }\n  });\n  return function testFirestoreConnection(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n// Llama a la función después de inicializar Firestore\nconst db = getFirestore();\ntestFirestoreConnection(db);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}