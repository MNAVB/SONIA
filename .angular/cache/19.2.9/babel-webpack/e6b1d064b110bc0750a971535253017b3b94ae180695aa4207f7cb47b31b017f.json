{"ast":null,"code":"import _asyncToGenerator from \"D:/Usuarios/huama/WebstormProjects/SONIA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { provideFirebaseApp, initializeApp } from '@angular/fire/app';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { environment } from './environments/environment';\nimport { getDocs, collection } from 'firebase/firestore';\n// Versión corregida con \"importProvidersFrom\"\nbootstrapApplication(AppComponent, {\n  providers: [provideFirebaseApp(() => initializeApp(environment.firebase)), provideFirestore(() => getFirestore())\n  // Otros providers si los necesitas\n  ]\n}).then(() => {\n  // Ejecutar prueba de conexión a Firestore después del bootstrap\n  const db = getFirestore();\n  testFirestoreConnection(db);\n}).catch(err => {\n  console.error('Error al iniciar la aplicación:', err);\n});\n// Función de prueba\nconst testFirestoreConnection = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (db) {\n    try {\n      const querySnapshot = yield getDocs(collection(db, 'productos'));\n      const data = querySnapshot.docs.map(doc => doc.data());\n      document.body.innerHTML += `<p>Firestore conectado: ${JSON.stringify(data)}</p>`;\n    } catch (error) {\n      console.error('Error conectando a Firestore:', error);\n      document.body.innerHTML += `<p>Error conectando a Firestore: ${error.message}</p>`;\n    }\n  });\n  return function testFirestoreConnection(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}